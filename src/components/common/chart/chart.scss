@use "sass:map" as map;
@use "../../../stylesheets/color" as color;
@use "../../../stylesheets/util" as util;
@use "../../../stylesheets/radius" as radius;
@use "../../../stylesheets/mixin" as mixin;
@use "../../../stylesheets/config" as config;

.chart {
  border-bottom-left-radius: map.get(radius.$border-radius, medium);
  border-bottom-right-radius: map.get(radius.$border-radius, medium);

  &__header {
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    font-size: util.rem(10);
    white-space: nowrap;
    user-select: none;

    &__container {
      margin-top: 2%;

      &--usage {
        @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
          height: 12%;
          margin-top: 8%;
        }

        @include mixin.breakpoint(map.get(config.$breakpoints, medium)) {
          height: 10%;
          margin-top: 5.5%;
        }

        @include mixin.breakpoint(map.get(config.$breakpoints, large)) {
          height: 8%;
          margin-top: 5%;
        }

        @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
          height: 8%;
          margin-top: 3%;
        }

        @include mixin.breakpoint(map.get(config.$breakpoints, xx-large)) {
          height: 6%;
          margin-top: 2%;
        }
      }
    }

    &__zoom-options {
      display: flex;
      position: relative;
      margin-left: util.rem(5);
      flex-direction: row;
      z-index: 5;
      width: 20%;

      &--left {

        &-top {
          display: flex;
          flex-direction: row;
          cursor: pointer;
          justify-content: center;
          margin-bottom: 1.8%;
          font-weight: bold;

          &__settings {
            margin-left: util.rem(4);
            width: util.rem(15);
            max-height: util.rem(12)
          }

          &__options {
            position: relative;
            margin-left: util.rem(4);
            max-height: util.rem(20);
            width: util.rem(20);

            &:active {
              position: relative;
              top: 0.9px;
            }
          }

          &-buttons {
            display: flex;
            width: util.rem(30);
            flex-direction: row;
          }
        }

        &-bottom {
          display: flex;
          flex-direction: row;
          cursor: pointer;
          justify-content: center;
          font-weight: bold;
          width: util.rem(30);
          margin-top: -1%;
          margin-bottom: 1.8%;
        }
      }
    }

    &__center-text {

      & p {
        font-weight: bold;
        font-size: util.rem(10) !important;
        margin-top: util.rem(5);
        padding-bottom: 5%;
      }
    }

    &__rain {
      padding-left: util.rem(104);

      &--top {
        font-weight: bold;
        padding-right: util.rem(10);
      }

      &--lower {
        color: transparent;
        user-select: none;
      }
    }

    &--top {
      background-color: map.get(color.$colorMap, chart-background-blue);
      border-top-left-radius: map.get(radius.$border-radius, medium);
      border-top-right-radius: map.get(radius.$border-radius, medium);
    }

    &--bottom {
      background-color: map.get(color.$colorMap, chart-background-green);
      border-top-left-radius: map.get(radius.$border-radius, medium);
      border-top-right-radius: map.get(radius.$border-radius, medium);
    }
  }

  &__info {
    user-select: none;
    width: 100%;
    height: util.rem(10);
    margin: -4.5% 0 0 6.5%;
    color: red;
    opacity: 0.3;

    @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
      font-size: util.rem(7);
      margin: -8% 0 0 15%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, medium)) {
      font-size: util.rem(9);
      margin: -7% 0 0 13%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, large)) {
      font-size: util.rem(11);
      margin: -4.5% 0 0 9.5%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
      font-size: util.rem(13);
      margin: -4.5% 0 0 7.5%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, xx-large)) {
      font-size: util.rem(15);
      margin: -4.5% 0 0 6.5%;
    }
  }

  &--top {
    background-color: map.get(color.$colorMap, chart-background-blue);
    margin-bottom: util.rem(5);
  }

  &--bottom {
    background-color: map.get(color.$colorMap, chart-background-green);
    border-bottom-left-radius: map.get(radius.$border-radius, medium);
    border-bottom-right-radius: map.get(radius.$border-radius, medium);
  }

  &__checkbox-filter {
    display: flex;
    justify-content: center;

    &__inner {
      display: flex;
      flex-direction: row-reverse;
    }

    &--dailyETO {

      @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
        margin-top: -17vh;
        margin-left: 1%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
        margin-top: -13vh;
        margin-left: 1%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, medium)) {
        margin-top: -14vh;
        margin-left: 1%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, large)) {
        margin-top: -14vh;
        margin-left: 1%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
        margin-top: -13vh;
        margin-left: 5%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, xx-large)) {
        margin-top: -14vh;
        margin-left: 8%;
      }
    }

    &--temperatures {

      @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
        margin-top: -20vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
        margin-top: -21vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, medium)) {
        margin-top: -22vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, large)) {
        margin-top: -23vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
        margin-top: -24vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, xx-large)) {
        margin-top: -25vh;
      }
    }
  }

}

.tooltip-container {

  &__rect {
    border-radius: map.get(radius.$border-radius, large);
    -webkit-filter: drop-shadow(util.rem(1) util.rem(1) util.rem(1) rgba(0, 0, 0, .7));
    filter: drop-shadow(util.rem(1) util.rem(1) util.rem(1) rgba(0, 0, 0, .7));
  }
}
