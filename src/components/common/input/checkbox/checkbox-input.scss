@use "sass:map" as map;
@use "../../../../stylesheets/util" as util;
@use "../../../../stylesheets/color" as color;
@use "../../../../stylesheets/radius" as radius;
@use "../../../../stylesheets/mixin" as mixin;
@use "../../../../stylesheets/config" as config;

.checkbox-input {
  display: flex;
  flex-direction: row-reverse;
  justify-content: left;
  user-select: none;
  width: 100%;

  &__label-container {
    display: flex;
    align-items: flex-start;
    padding-left: util.rem(1);
    margin-top: util.rem(0);
    font-size: util.rem(10);

    & label {
      margin-top: util.rem(2);
      cursor: pointer;
    }
  }

  &__input {
    display: flex;
    cursor: pointer;
    width: util.rem(12);
    height: util.rem(11);
    border: util.rem(1.2) solid map.get(color.$colorMap, pulse-blue);
    border-radius: map.get(radius.$border-radius, medium);
  }
}

.checkbox-input__input {

  &:checked {
    animation: ripple 0.2s linear forwards;
    background-color: map.get(color.$colorMap, pulse-blue);
  }

  &:hover {
    border: util.rem(2) solid map.get(color.$colorMap, secondary-blue-1);
  }

  &--daily {

    &:checked {
      animation: ripple 0.2s linear forwards;
      background-color: map.get(color.$colorMap, daily-ETO-green);
      border: util.rem(1.2) solid map.get(color.$colorMap, daily-ETO-green);
    }

    &:hover {
      border: util.rem(2) solid map.get(color.$colorMap, secondary-blue-1);
    }
  }
}

@keyframes ripple {

  0% {
    box-shadow: 0 0 0 util.rem(1) rgba(0, 0, 0, 0.0);
  }

  50% {
    box-shadow: 0 0 0 util.rem(5) rgba(0, 0, 0, 0.1);
  }

  100% {
    box-shadow: 0 0 0 util.rem(5) rgba(0, 0, 0, 0);
  }
}

.chart {

  &__checkbox-filter {
    display: flex;
    justify-content: center;
    position: relative;

    &__inner {
      display: flex;
      flex-direction: row-reverse;
    }

    &--dailyETO {

      @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
        margin-top: -16vh;
        margin-left: 1%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
        margin-top: -15vh;
        margin-left: 1%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, medium)) {
        margin-top: -16vh;
        margin-left: 1%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, large)) {
        margin-top: -16vh;
        margin-left: 1%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
        margin-top: -16vh;
        margin-left: 5%;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, xx-large)) {
        margin-top: -17vh;
        margin-left: 8%;
      }
    }

    &--temperatures {

      @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
        margin-top: -20vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
        margin-top: -21vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, medium)) {
        margin-top: -22vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, large)) {
        margin-top: -23vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
        margin-top: -24vh;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, xx-large)) {
        margin-top: -25vh;
      }
    }
  }
}
