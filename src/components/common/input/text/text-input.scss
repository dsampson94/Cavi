@use "sass:map" as map;
@use "../../../../stylesheets/util" as util;
@use "../../../../stylesheets/color" as color;
@use "../../../../stylesheets/radius" as radius;
@use "../../../../stylesheets/mixin" as mixin;
@use "../../../../stylesheets/config" as config;

.text-input {
  width: 100%;
  padding: util.rem(4) util.rem(5) util.rem(2) util.rem(3);

  &--login {
    padding: util.rem(0);
  }

  &--left {
    display: flex;
  }

  &--wide {
    min-width: util.rem(130);
  }

  &--chartbar {
    padding: 0;
  }

  &--table {
    display: flex;
    justify-content: flex-start;
    min-width: 100%;
    padding: 0
  }

  &--popup {
    display: flex;
    justify-content: flex-start;
    margin-top: util.rem(4);
    margin-bottom: util.rem(5);
    padding: 0
  }

  &--centered {
    border-bottom: util.rem(1) solid map.get(color.$colorMap, black);;
    padding: util.rem(0) 10% util.rem(0) 1%;

    @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
      padding: util.rem(0) 20% util.rem(0) 1%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, medium)) {
      padding: util.rem(0) 10% util.rem(0) 1%;
    }

  }

  &--topbar {
    height: 100%;
    padding-top: util.rem(6);
    min-width: 120px;
    width: 120px;

    @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
      display: none;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
      display: flex;
    }
  }

  &__label-container {

    &--login {
      display: flex;
      flex-direction: column;
      text-align: center;
      color: map.get(color.$colorMap, pulse-blue);
      margin-top: util.rem(6);
      min-width: util.rem(100);
    }

    &--left {
      display: flex;
      min-width: util.rem(170);
      text-align: left;
      margin-top: util.rem(5);
      flex-direction: row;
    }

    &--centered {
      min-width: 35%;
    }
  }

  &__input {
    width: 100%;
    text-align: left;
    margin: util.rem(4) util.rem(2) util.rem(4) util.rem(0.8);
    padding: 0 util.bu(1.5) 0 util.bu(0.8);
    border: util.rem(1) solid map.get(color.$colorMap, pulse-blue);
    border-radius: map.get(radius.$border-radius, medium);
    font-family: Aller, serif;
    font-size: util.bu(2);

    input:-webkit-autofill {
      -webkit-box-shadow: inset 0 0 0 util.rem(100) map.get(color.$colorMap, autofill-blue);
    }

    &--login {
      text-align: center;
      height: util.rem(38);
      border-radius: map.get(radius.$border-radius, medium);

      @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
        height: util.rem(35);
      }
    }

    &--select {
      margin: util.rem(0) util.rem(-10) util.rem(0) util.rem(25);
      border: util.rem(1.5) solid map.get(color.$colorMap, pulse-blue);
      height: util.rem(25);
      width: util.rem(50);
      font-size: util.bu(1.1);
      padding: 0 0 0 util.rem(1.8);
    }

    &--wide {
      min-width: util.rem(150);
    }

    &--chartbar {
      margin: util.rem(9) util.rem(0) util.rem(4) util.rem(21);
      border: util.rem(1.5) solid map.get(color.$colorMap, pulse-blue);
      height: util.rem(18);
      width: util.rem(50);
      font-size: util.bu(1.1);
      padding: 0 0 0 util.rem(1.8);
    }

    &--table {
      margin: util.rem(4) util.rem(0) util.rem(4) 0;
      border: util.rem(1.5) solid map.get(color.$colorMap, pulse-blue);
      height: util.rem(35);
      font-size: util.bu(1.4);
    }

    &--popup {
      width: util.rem(80);
      margin: 0 util.rem(5) 0 0;
      padding: util.rem(1) 0 util.rem(1) 0;
      border-radius: map.get(radius.$border-radius, small);
      padding-left: util.rem(12);
    }

    &--input {
      min-width: util.rem(200);
    }
  }

  ::placeholder {
    font-size: util.rem(10);
  }
}
