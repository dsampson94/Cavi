@use "sass:map" as map;
@use "../../../stylesheets/color" as color;
@use "../../../stylesheets/util" as util;
@use "../../../stylesheets/radius" as radius;
@use "../../../stylesheets/mixin" as mixin;
@use "../../../stylesheets/config" as config;

.client-fields-side-bar {
  display: flex;
  flex-direction: column;
  margin-top: util.rem(1);
  user-select: none;
  transition: 0.4s;
  height: 100%;
  width: 0;

  &__list {
    display: flex;
    white-space: nowrap;
    flex-direction: column;
    overflow-y: scroll;
    height: calc(100% - 80px);
    margin-left: util.rem(5);

    &__header {
      display: flex;
      font-size: util.rem(13);
      font-weight: bold;
      padding: util.rem(3) 0 util.rem(3) util.rem(6);
      color: map.get(color.$colorMap, field-name-blue);
    }

    &__container {
      display: flex;
      flex-direction: column;
      padding: util.rem(2) util.rem(6) util.rem(0) util.rem(2);
    }

    &--favorites {
      width: 98.3%;
      max-height: util.rem(250);
      height: auto;
      min-height: util.rem(103);

      @include mixin.breakpoint(map.get(config.$breakpoints, large)) {
        min-height: util.rem(100);
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
        min-height: util.rem(103);
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, xx-large)) {
        min-height: util.rem(150);
      }
    }

    &__item {

      &__header {
        display: flex;
        font-weight: bold;
        font-size: util.rem(13);
        border-bottom: util.rem(1) solid;
      }

      &__subheader {
        display: flex;
        flex-direction: row;
        height: util.rem(17);
        cursor: pointer;
        border-top-right-radius: map.get(radius.$border-radius, medium);
        border-bottom-right-radius: map.get(radius.$border-radius, medium);

        &:hover {
          cursor: pointer;
          position: relative;
          border-bottom: util.rem(1) solid map.get(color.$colorMap, pulse-blue);
          background-color: map.get(color.$colorMap, row-hover-blue);
        }

        &__text {
          font-size: util.rem(12);
          overflow-x: hidden;
          width: 89%;
        }

        &__icon {
          width: util.rem(18);
          position: relative;

          &:active {
            position: relative;
            top: util.rem(1);
          }
        }

        &--selected {
          cursor: pointer;
          position: relative;
          border-bottom: util.rem(1) solid map.get(color.$colorMap, pulse-blue);
          background-color: map.get(color.$colorMap, row-hover-blue);
        }
      }
    }
  }

  &--show {
    width: 14%;
  }

  &__lower-button {
    display: flex;
    border-top: util.rem(1) solid;
    padding: util.rem(10) util.rem(5) util.rem(8) util.rem(5);
  }
}

.field-charts-side-bar {
  display: flex;
  flex-direction: column;
  resize: horizontal;
  overflow-y: auto;
  overflow-x: hidden;
  user-select: none;
  transition: 0.4s;
  height: 98%;
  width: 0;

  &__view-mode {
    display: flex;
    flex-direction: column;
    margin-bottom: util.rem(10);

    &__header {
      display: flex;
      font-size: util.rem(13);
      font-weight: bold;
      padding: util.rem(3) 0 util.rem(3) util.rem(6);
      color: map.get(color.$colorMap, field-name-blue);
      margin-bottom: util.rem(2);
    }

    &__options {
      display: flex;
      font-size: util.rem(12);
      flex-direction: column;
      height: 100%;
    }
  }

  &__field-list {
    padding: util.rem(20) util.rem(5) util.rem(0) util.rem(6);
    font-size: util.rem(12);
    overflow-y: scroll;

    &__header {
      white-space: nowrap;
      overflow-x: scroll;
      -ms-overflow-style: none;
      scrollbar-width: none;
      cursor: pointer;
      width: 98%;
      font-weight: bold;
      padding: util.rem(1) util.rem(0) util.rem(1) util.rem(2);
    }

    &__item {
      display: flex;
      flex-direction: row;
      cursor: pointer;

      &::-webkit-scrollbar {
        display: none;
      }

      &__container {
        z-index: 9;
        min-width: 78%;
        height: util.rem(18);
        margin-left: util.rem(3);

        &--upper {
          opacity: 0.4;
          height: util.rem(8);
          border-top-right-radius: map.get(radius.$border-radius, small);
        }

        &--lower {
          opacity: 0.4;
          height: util.rem(8);
          border-bottom-right-radius: map.get(radius.$border-radius, small);
        }

        &--text {
          white-space: nowrap;
          position: relative;
          overflow-x: scroll;
          padding: util.rem(0) util.rem(0) util.rem(0) util.rem(2);
          -ms-overflow-style: none;
          scrollbar-width: none;
          transform: translateY(-15.5px);

          &--bold {
            font-weight: bold;
          }
        }
      }

      &__icon {
        position: relative;
        width: 22%;
        height: util.rem(16);
      }
    }
  }

  &--show {
    width: 12%;
  }
}

.field-setup-side-bar {
  display: flex;
  flex-direction: column;
  overflow: auto;
  user-select: none;
  transition: 0.4s;
  height: 100%;
  width: 0;

  &__list {
    padding: util.rem(10) util.rem(5) util.rem(0) util.rem(10);
    font-size: util.rem(11);

    h4 {
      font-weight: bold;
      white-space: nowrap;
      padding: util.rem(0) util.rem(0) util.rem(1) util.rem(2);
      border: util.rem(3) solid transparent;
    }

    &--client {
      padding: util.rem(20) util.rem(5) util.rem(0) util.rem(10);
      font-size: util.rem(11);

      li {
        display: flex;
        flex-direction: row;
        cursor: pointer;
        font-size: util.rem(14);
        color: orange;
        padding: util.rem(3) 0 util.rem(3) 0;
        border-top-right-radius: map.get(radius.$border-radius, medium);
        border-bottom: util.rem(1) solid map.get(color.$colorMap, light-grey);

        &::-webkit-scrollbar {
          display: none;
        }

        &:hover {
          cursor: pointer;
          position: relative;
          border-bottom: util.rem(1) solid map.get(color.$colorMap, pulse-blue);
          background-color: map.get(color.$colorMap, row-hover-blue);
        }
      }
    }

    li {
      display: flex;
      flex-direction: row;
      cursor: pointer;
      font-size: util.rem(14);
      border-top-right-radius: map.get(radius.$border-radius, medium);
      padding: util.rem(3) 0 util.rem(3) 0;
      border-bottom: util.rem(1) solid map.get(color.$colorMap, light-grey);

      &::-webkit-scrollbar {
        display: none;
      }

      &:hover {
        cursor: pointer;
        position: relative;
        border-bottom: util.rem(1) solid map.get(color.$colorMap, pulse-blue);
        background-color: map.get(color.$colorMap, row-hover-blue);
      }
    }

    &__item {

      &--selected {
        cursor: pointer;
        position: relative;
        background-color: map.get(color.$colorMap, row-hover-blue);
      }
    }
  }

  &--show {
    width: 15%;
  }
}
