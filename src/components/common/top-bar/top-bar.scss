@use "sass:map" as map;
@use "../../../stylesheets/color" as color;
@use "../../../stylesheets/util" as util;
@use "../../../stylesheets/radius" as radius;
@use "../../../stylesheets/mixin" as mixin;
@use "../../../stylesheets/config" as config;

.top-bar {
  display: flex;
  position: relative;
  flex-direction: row;
  align-items: center;
  user-select: none;
  height: util.rem(55);
  margin-bottom: util.rem(4);
  border-bottom: util.rem(3) solid grey;
  max-width: 99.7%;
  z-index: 99;

  @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
    margin-bottom: util.rem(50);
  }

  @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
    height: util.rem(55);
    margin-bottom: util.rem(4);
  }

  & button {
    margin: util.rem(4);
  }

  &__left {
    display: flex;
    flex-direction: row;
    height: 100%;
    width: 70%;

    @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
      margin-bottom: util.rem(8);
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
      margin-bottom: util.rem(0);
    }

    &__divider {
      display: flex;
      border-right: util.rem(1) solid map.get(color.$colorMap, palette-blue-1);
      height: 80%;
      width: 20%;
      align-self: center;

      @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
        min-width: util.rem(120);
        border: none;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
        border-right: util.rem(1) solid map.get(color.$colorMap, palette-blue-1);
        width: 20%;
      }

      button {
        align-self: center;

        @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
          display: none;
        }

        @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
          display: flex;
        }
      }
    }

    &__breadcrumb {
      align-self: center;
      margin-left: util.rem(5);

      @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
        margin-left: 0;
        margin-top: util.rem(10);
        min-width: 104%;
        overflow: hidden;
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
        margin-left: util.rem(5);
        margin-top: util.rem(4);
        min-width: 1%;
      }

      &__container {
        display: flex;
      }

      p {
        cursor: pointer;
        font-weight: 400;
        font-size: util.rem(18);
        margin-left: util.rem(5);
        color: map.get(color.$colorMap, palette-blue-1);
        font-family: "Roboto Thin";

        @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
          font-size: util.rem(12);
          white-space: nowrap;
        }

        @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
          font-size: util.rem(18);
        }

        &:active {
          position: relative;
          color: map.get(color.$colorMap, hover-blue);
          top: 0.9px;
        }

        &:hover {
          position: relative;
          color: map.get(color.$colorMap, hover-blue);
          top: 0.4px;
        }
      }
    }

    &__header {
      display: flex;
      margin: util.rem(2) 0 util.rem(2) util.rem(6);
    }

    &__buttons {
      display: flex;
      margin-top: util.rem(8);
      margin-right: util.rem(10);

      @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
        padding-top: util.rem(55);
        transform: translateX(23%);
      }

      @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
        margin-top: util.rem(8);
        padding-top: util.rem(0);
        transform: translateX(0%);
      }
    }
  }

  &__right {
    display: flex;
    justify-content: flex-end;
    width: 30%;
    height: 100%;

    &--menu {
      display: flex;
      position: relative;
      z-index: 11;
      cursor: pointer;
      align-self: center;
      margin-top: util.rem(5);

      &:active {
        position: relative;
        top: 0.9px;
      }
    }
  }
}
