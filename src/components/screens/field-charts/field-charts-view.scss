@use "sass:map" as map;
@use "../../../stylesheets/color" as color;
@use "../../../stylesheets/util" as util;
@use "../../../stylesheets/radius" as radius;
@use "../../../stylesheets/mixin" as mixin;
@use "../../../stylesheets/config" as config;

.field-chart {
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow: hidden;

  &__top-bar {
    display: flex;
    flex-direction: row;
    margin-left: util.rem(1);
    margin-top: util.rem(6);
    height: util.rem(18);
    white-space: nowrap;
    user-select: none;

    &--left {
      display: flex;
      flex-direction: row;
      align-items: center;
      padding-right: util.rem(40);
      font-size: util.rem(12);
      width: 50%;

      &__settings {
        position: relative;
        cursor: pointer;
        z-index: 8;
        margin-top: util.rem(-1);
        width: util.rem(22);
        height: util.rem(16);
      }

      & p {
        overflow: hidden;
        margin-top: util.rem(3.4);
        margin-left: util.rem(10);
        font-size: util.rem(10);
      }

      &-inner {
        display: flex;
        position: relative;
        z-index: 5;
        flex-direction: row;
      }

      &-outer {
        display: flex;
        position: relative;
        z-index: 5;
        margin: 0 util.rem(2) 0 util.rem(2);
        flex-direction: row;
        width: 18%;
      }
    }

    &--center {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;

      & div {
        position: relative;
        margin-left: util.rem(-40);
        z-index: 5;
        padding-top: util.rem(3);
        font-weight: bold;
      }
    }

    &--right {
      display: flex;
      flex-direction: row-reverse;
      align-items: center;
      font-size: util.rem(10);
      width: 50%;

      &--datebar {
        display: flex;
        width: 70%;
      }

      &-days-container {
        display: flex;
        flex-direction: row-reverse;
        margin: util.rem(5.5) util.rem(-10) util.rem(4) util.rem(4);

        & div {
          position: relative;
          z-index: 11;
          margin: util.rem(5.5) util.rem(2) util.rem(4) util.rem(4);
          user-select: none;
          cursor: pointer;

          &:active {
            position: relative;
            top: 0.9px;
          }
        }

        & p {
          position: relative;
          user-select: none;
          font-weight: bold;
        }
      }

      &-tool-container {
        display: flex;
        justify-content: left;
        flex-direction: row-reverse;
        width: util.rem(105);
        margin-right: util.rem(30);
      }

      &-icon-container {
        display: flex;
        position: relative;
        width: util.rem(30);
        height: util.rem(18);
        margin: util.rem(9) util.rem(0) util.rem(4) util.rem(5);
        border-top-right-radius: map.get(radius.$border-radius, medium);
        border-bottom-right-radius: map.get(radius.$border-radius, medium);
        border: util.rem(1.5) solid map.get(color.$colorMap, pulse-blue);
        box-shadow: util.rem(1) util.rem(1) util.rem(1) map.get(color.$colorMap, pulse-blue),
        inset util.rem(1) util.rem(1) util.rem(1) map.get(color.$colorMap, blur-lighter);
        background-color: map.get(color.$colorMap, pulse-blue);
        cursor: pointer;

        &:active {
          position: relative;
          top: 0.9px;
        }
      }
    }

    &__search {
      width: 100%;
    }
  }

  &__container {
    display: flex;
    flex-direction: row;
    overflow-x: hidden;
    overflow-y: hidden;
    cursor: pointer;
    width: 100%;
    height: 100vh;
  }

  &__left {
    display: flex;
    flex-direction: column;
    margin: 1% 1% 0 0;
    width: 47.8%;

    svg {
      overflow: visible;
    }
  }

  &__right {
    display: flex;
    flex-direction: column;
    width: 50%;

    @include mixin.breakpoint(map.get(config.$breakpoints, x-small)) {
      height: 103%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, small)) {
      height: 92%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, medium)) {
      height: 96%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, large)) {
      height: 95.8%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, x-large)) {
      height: 97.5%;
    }

    @include mixin.breakpoint(map.get(config.$breakpoints, xx-large)) {
      height: 100%;
    }

    svg {
      overflow: visible;
    }

    &__top {
      height: 50%;
    }

    &__bottom {
      height: 50%;
    }
  }

  &__lower {
    height: util.rem(1);
    width: 100%;
  }
}
