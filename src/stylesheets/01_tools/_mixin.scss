@use "sass:math" as math;
@use "sass:map" as map;
@use "sass:string" as string;

@use "../00_settings/radius" as radius;
@use "../00_settings/color" as colors;
@use "../00_settings/config" as config;
@use "../00_settings/util" as utils;

///  breakpoint mixins based on breakpoint definitions, accepting content blocks
///  to be used for responsive design
@mixin breakpoint($bp-name) {
  $min-width: "";

  @if map-has-key(config.$breakpoints, $bp-name) {
    $min-width: map.get(config.$breakpoints, $bp-name);
  } @else if type_of($bp-name) == number {
    $min-width: $bp-name;
  }

  $min-width-ems: math.div($min-width, config.$base-font-size) * 1em;

  @media screen and (min-width: $min-width-ems) {
    @content;
  }
}

@mixin tablet-portrait() {
  @media screen and (min-width: 480px) and (max-width: 1024px) and (orientation: portrait) {
    @content;
  }
}

@mixin tablet-landscape() {
  @media screen and (min-height: 600px) and (max-height: 700px) and (orientation: landscape) {
    @content;
  }
}

/// Single mixin to change font families
@mixin set-font-family($font-family: default) {
  @if $font-family == default {
    font-family: Aller_Rg, serif;
  }
}

@mixin overflow-ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin centered-flex() {
  display: flex;
  align-items: center;
  justify-content: center;
}
